# .properties \uD30C\uC77C\uC5D0\uC11C \uD55C\uAE00 \uC778\uCF54\uB529 \uC124\uC815(\uAE68\uC9D0 \uBC29\uC9C0)
# Settings(Ctrl+Alt+S) -> Editors -> File Encodings\uC5D0\uC11C Transparent native-to-ascii conversion \uCCB4\uD06C
spring.application.name=shop

# \uC560\uD50C\uB9AC\uCF00\uC774\uC158 \uD3EC\uD2B8 \uC124\uC815
server.port=80

# MySQL \uC5F0\uACB0 \uC124\uC815
# \uB370\uC774\uD130\uBCA0\uC774\uC2A4 \uC5F0\uACB0
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# \uC5F0\uACB0\uD560 \uB370\uC774\uD130\uBCA0\uC774\uC2A4\uC758 URL, \uD3EC\uD2B8 \uBC88\uD638, \uB370\uC774\uD130\uBCA0\uC774\uC2A4 \uC774\uB984 \uC785\uB825
spring.datasource.url=jdbc:mysql://localhost:3306/shop?serverTimezone=UTC

# \uB370\uC774\uD130\uBCA0\uC774\uC2A4 \uC124\uCE58 \uC2DC \uC785\uB825\uD55C \uC544\uC774\uB514, \uBE44\uBC00\uBC88\uD638 \uC785\uB825
spring.datasource.username=root
spring.datasource.password=1234

# \uC2E4\uD589\uB418\uB294 \uCFFC\uB9AC \uCF58\uC194 \uCD9C\uB825
spring.jpa.properties.hibernate.show_sql=true

# \uCF58\uC194\uCC3D\uC5D0 \uCD9C\uB825\uB418\uB294 \uCFFC\uB9AC\uB97C \uAC00\uB3C5\uC131 \uC88B\uAC8C \uD3EC\uB9F7\uD305
spring.jpa.properties.hibernate.format_sql=true

# \uCFFC\uB9AC\uC5D0 \uBB3C\uC74C\uD45C\uB85C \uCD9C\uB825\uB418\uB294 \uBC14\uC778\uB4DC \uD30C\uB77C\uBBF8\uD130 \uCD9C\uB825
logging.level.org.hibernate.type.descriptor.sql=trace

# \u203B \uB370\uC774\uD130\uBCA0\uC774\uC2A4 \uCD08\uAE30\uD654 \uC804\uB7B5 \uC124\uC815(DDL AUTO \uC635\uC158)
# spring.jpa.hibernate.ddl-auto \uC635\uC158 \uC885\uB958(5)
# none: \uC0AC\uC6A9\uD558\uC9C0 \uC54A\uC74C
# create: \uAE30\uC874 \uD14C\uC774\uBE14 \uC0AD\uC81C \uD6C4 \uD14C\uC774\uBE14 \uC0DD\uC131
# create-drop: \uAE30\uC874 \uD14C\uC774\uBE14 \uC0AD\uC81C \uD6C4 \uD14C\uC774\uBE14 \uC0DD\uC131. \uC885\uB8CC \uC2DC\uC810\uC5D0 \uD14C\uC774\uBE14 \uC0AD\uC81C
# update: \uBCC0\uACBD\uB41C \uC2A4\uD0A4\uB9C8 \uC801\uC6A9
# validate: \uC5D4\uD2F0\uD2F0\uC640 \uD14C\uC774\uBE14 \uC815\uC0C1 \uB9E4\uD551 \uD655\uC778
#
# update \uC635\uC158\uC5D0\uC11C \uCEEC\uB7FC \uC0AD\uC81C\uB294 \uC5C4\uCCAD\uB09C \uBB38\uC81C\uB97C \uBC1C\uC0DD\uC2DC\uD0AC \uC218 \uC788\uC5B4\uC11C \uCEEC\uB7FC \uCD94\uAC00\uB9CC \uBC18\uC601\uD568.
# \uBA3C\uC800, '\uC2A4\uD14C\uC774\uC9D5 \uD658\uACBD\uACFC \uC6B4\uC601\uD658\uACBD'\uC5D0 \uB300\uD574 \uC54C\uC544\uC57C \uD55C\uB2E4.
# \uC2A4\uD14C\uC774\uC9D5 \uD658\uACBD: \uC6B4\uC601\uD658\uACBD\uC5D0 \uBC30\uD3EC\uD558\uAE30 \uC804 \uC5EC\uB7EC \uAE30\uB2A5(\uC131\uB2A5, \uC7A5\uC560 \uB4F1)\uC744 \uAC80\uC99D\uD558\uB294 \uD658\uACBD.
#   \uC6B4\uC601\uD658\uACBD\uACFC \uAC70\uC758 \uB3D9\uC77C\uD55C \uD658\uACBD\uC73C\uB85C \uAD6C\uC131
# \uC6B4\uC601\uD658\uACBD: \uC2E4\uC81C \uC11C\uBE44\uC2A4\uB97C \uC6B4\uC601\uD558\uB294 \uD658\uACBD
#
# \uC2A4\uD14C\uC774\uC9D5, \uC6B4\uC601\uD658\uACBD\uC5D0\uC120 \uC808\uB300 create, create-drop, update\uB97C \uC0AC\uC6A9\uD558\uBA74 \uC548\uB428.
# \uC2A4\uD14C\uC774\uC9D5\uACFC \uC6B4\uC601 \uC11C\uBC84\uC5D0\uC120 \uD14C\uC774\uBE14 \uC0DD\uC131, \uCEEC\uB7FC \uCD94\uAC00, \uC0AD\uC81C, \uBCC0\uACBD\uC740 \uB370\uC774\uD130\uBCA0\uC774\uC2A4\uC5D0\uC11C \uC9C1\uC811\uD558\uBA70,
# none\uC744 \uC0AC\uC6A9\uD558\uAC70\uB098 validate\uB97C \uC774\uC6A9\uD558\uC5EC \uC815\uC0C1\uC801\uC778 \uB9E4\uD551 \uAD00\uACC4\uB9CC \uD655\uC778\uD560 \uAC83.
spring.jpa.hibernate.ddl-auto=create

# SQL \uC885\uB958(2)
# \uD45C\uC900 SQL, DBMS \uBCA4\uB354\uC5D0\uC11C \uC81C\uACF5\uD558\uB294 SQL
# \uD604\uC7AC \uC0AC\uC6A9\uD558\uB294 \uB370\uC774\uD130\uBCA0\uC774\uC2A4: MySQL(JPA\uC5D0 MySQL8Dialect(\uC5EC\uAE30\uC11C Dialect\uB294 '\uBC29\uC5B8')\uB97C \uC0AC\uC6A9\uD558\uB77C \uC54C\uB824\uC90C)
# \uB370\uC774\uD130\uBCA0\uC774\uC2A4\uB97C Oracle\uB85C \uAD50\uCCB4\uD560 \uACBD\uC6B0, Oracle\uC758 Dialect\uB97C \uC124\uC815\uD558\uBA74 \uBB38\uC81C\uC5C6\uC774 \uC560\uD50C\uB9AC\uCF00\uC774\uC158 \uAD6C\uB3D9 \uAC00\uB2A5.
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
